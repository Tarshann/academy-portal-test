{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\academy-portal-test\\\\client\\\\src\\\\components\\\\messages\\\\MessageList.js\",\n  _s = $RefreshSig$();\n// client/src/components/messages/MessageList.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport MessageInput from './MessageInput';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessageList = ({\n  conversation,\n  user\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const messagesEndRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Load messages when conversation changes\n  useEffect(() => {\n    if (!conversation) return;\n    const fetchMessages = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        setPage(1);\n        setHasMore(true);\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setError('Not authenticated');\n          return;\n        }\n        const config = {\n          headers: {\n            'x-auth-token': token\n          }\n        };\n        const res = await axios.get(`/api/conversations/${conversation._id}/messages?page=1&limit=20`, config);\n        setMessages(res.data.messages);\n\n        // Check if there are more messages to load\n        if (res.data.pagination.totalPages <= 1) {\n          setHasMore(false);\n        }\n      } catch (err) {\n        setError('Failed to load messages');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMessages();\n  }, [conversation]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n\n  // Load more messages when scrolling to top\n  const handleScroll = async () => {\n    if (!containerRef.current || !hasMore || loading) return;\n    const {\n      scrollTop\n    } = containerRef.current;\n\n    // If scrolled to top, load more messages\n    if (scrollTop === 0) {\n      try {\n        setLoading(true);\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setError('Not authenticated');\n          return;\n        }\n        const config = {\n          headers: {\n            'x-auth-token': token\n          }\n        };\n        const nextPage = page + 1;\n        const res = await axios.get(`/api/conversations/${conversation._id}/messages?page=${nextPage}&limit=20`, config);\n\n        // Prepend new messages to existing ones\n        setMessages([...res.data.messages.reverse(), ...messages]);\n\n        // Update page number\n        setPage(nextPage);\n\n        // Check if there are more messages to load\n        if (nextPage >= res.data.pagination.totalPages) {\n          setHasMore(false);\n        }\n      } catch (err) {\n        setError('Failed to load more messages');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  // Format message timestamp\n  const formatMessageTime = timestamp => {\n    if (!timestamp) return '';\n    const date = new Date(timestamp);\n    const now = new Date();\n\n    // If today, show time\n    if (date.toDateString() === now.toDateString()) {\n      return format(date, 'h:mm a');\n    }\n\n    // If within last week, show day and time\n    const oneWeekAgo = new Date();\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n    if (date > oneWeekAgo) {\n      return format(date, 'EEE h:mm a');\n    }\n\n    // Otherwise show date and time\n    return format(date, 'MM/dd/yyyy h:mm a');\n  };\n\n  // Handle sending a new message\n  const handleSendMessage = async (content, type = 'text', file = null) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Not authenticated');\n        return;\n      }\n      const config = {\n        headers: {\n          'x-auth-token': token,\n          'Content-Type': 'application/json'\n        }\n      };\n      let res;\n      if (type === 'text') {\n        // Send text message\n        res = await axios.post(`/api/conversations/${conversation._id}/messages`, {\n          content\n        }, config);\n      } else if (type === 'media' && file) {\n        // Send media message\n        const formData = new FormData();\n        formData.append('media', file);\n        formData.append('content', content); // Optional caption\n\n        const mediaConfig = {\n          headers: {\n            'x-auth-token': token,\n            'Content-Type': 'multipart/form-data'\n          }\n        };\n        res = await axios.post(`/api/conversations/${conversation._id}/messages/media`, formData, mediaConfig);\n      }\n\n      // Add new message to list\n      if (res && res.data) {\n        setMessages([...messages, res.data]);\n      }\n    } catch (err) {\n      setError('Failed to send message');\n      console.error(err);\n    }\n  };\n\n  // Handle message reactions\n  const handleReaction = async (messageId, reaction) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Not authenticated');\n        return;\n      }\n      const config = {\n        headers: {\n          'x-auth-token': token,\n          'Content-Type': 'application/json'\n        }\n      };\n      const res = await axios.post(`/api/conversations/${conversation._id}/messages/${messageId}/reaction`, {\n        reaction\n      }, config);\n\n      // Update message in the list\n      if (res && res.data) {\n        setMessages(messages.map(msg => msg._id === messageId ? res.data : msg));\n      }\n    } catch (err) {\n      setError('Failed to add reaction');\n      console.error(err);\n    }\n  };\n\n  // Get message style based on sender\n  const getMessageStyle = message => {\n    if (message.messageType === 'system') {\n      return 'system-message';\n    }\n    return message.sender._id === user._id ? 'sent-message' : 'received-message';\n  };\n\n  // Render message content based on type\n  const renderMessageContent = message => {\n    switch (message.messageType) {\n      case 'image':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: message.mediaUrl,\n              alt: \"Shared image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), message.content && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true);\n      case 'file':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-file\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: message.mediaUrl,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: message.mediaName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), message.content && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this);\n      case 'system':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"system-text\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Render message reactions\n  const renderReactions = message => {\n    if (!message.reactions || message.reactions.length === 0) {\n      return null;\n    }\n\n    // Group reactions by type\n    const reactionGroups = message.reactions.reduce((groups, reaction) => {\n      const emoji = reaction.reaction;\n      if (!groups[emoji]) {\n        groups[emoji] = {\n          count: 0,\n          users: []\n        };\n      }\n      groups[emoji].count++;\n      groups[emoji].users.push(reaction.user);\n      return groups;\n    }, {});\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-reactions\",\n      children: Object.entries(reactionGroups).map(([emoji, data]) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"reaction-badge\",\n        title: data.users.map(u => u.name).join(', '),\n        children: [emoji, \" \", data.count]\n      }, emoji, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this);\n  };\n  if (!conversation) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list empty-state\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a conversation from the list or start a new one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: conversation.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-icon\",\n          \"aria-label\": \"Conversation Info\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-info-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      ref: containerRef,\n      onScroll: handleScroll,\n      children: [loading && page === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-messages\",\n        children: \"Loading messages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"load-more\",\n        children: loading && page > 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Loading more messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Scroll to top to load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 19\n      }, this), messages.length === 0 && !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet. Start the conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-items\",\n        children: [messages.map((message, index) => {\n          const showAvatar = message.messageType !== 'system' && (index === 0 || messages[index - 1].sender._id !== message.sender._id);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-item ${getMessageStyle(message)}`,\n            children: [showAvatar && message.messageType !== 'system' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: message.sender.profileImage,\n                alt: message.sender.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble\",\n              children: [showAvatar && message.messageType !== 'system' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-sender\",\n                children: message.sender.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: renderMessageContent(message)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 21\n              }, this), renderReactions(message), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-time\",\n                  children: formatMessageTime(message.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 23\n                }, this), message.isEdited && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-edited\",\n                  children: \"Edited\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button reaction-button\",\n                \"aria-label\": \"Add Reaction\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-smile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 21\n              }, this), message.sender._id === user._id && message.messageType === 'text' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button edit-button\",\n                \"aria-label\": \"Edit Message\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 23\n              }, this), (message.sender._id === user._id || user.role === 'admin') && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button delete-button\",\n                \"aria-label\": \"Delete Message\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-trash-alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 19\n            }, this)]\n          }, message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      onSendMessage: handleSendMessage,\n      conversationId: conversation._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageList, \"CSHNL4ES4JnNbrVeb2WeJw5v/iM=\");\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","format","MessageInput","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageList","conversation","user","_s","messages","setMessages","loading","setLoading","error","setError","page","setPage","hasMore","setHasMore","messagesEndRef","containerRef","fetchMessages","token","localStorage","getItem","config","headers","res","get","_id","data","pagination","totalPages","err","console","current","scrollIntoView","behavior","handleScroll","scrollTop","nextPage","reverse","formatMessageTime","timestamp","date","Date","now","toDateString","oneWeekAgo","setDate","getDate","handleSendMessage","content","type","file","post","formData","FormData","append","mediaConfig","handleReaction","messageId","reaction","map","msg","getMessageStyle","message","messageType","sender","renderMessageContent","children","className","src","mediaUrl","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","mediaName","renderReactions","reactions","length","reactionGroups","reduce","groups","emoji","count","users","push","Object","entries","title","u","name","join","ref","onScroll","index","showAvatar","profileImage","createdAt","isEdited","role","onSendMessage","conversationId","_c","$RefreshReg$"],"sources":["C:/Users/user/academy-portal-test/client/src/components/messages/MessageList.js"],"sourcesContent":["// client/src/components/messages/MessageList.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport MessageInput from './MessageInput';\r\n\r\nconst MessageList = ({ conversation, user }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const messagesEndRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  \r\n  // Load messages when conversation changes\r\n  useEffect(() => {\r\n    if (!conversation) return;\r\n    \r\n    const fetchMessages = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError('');\r\n        setPage(1);\r\n        setHasMore(true);\r\n        \r\n        const token = localStorage.getItem('token');\r\n        \r\n        if (!token) {\r\n          setError('Not authenticated');\r\n          return;\r\n        }\r\n        \r\n        const config = {\r\n          headers: {\r\n            'x-auth-token': token\r\n          }\r\n        };\r\n        \r\n        const res = await axios.get(\r\n          `/api/conversations/${conversation._id}/messages?page=1&limit=20`,\r\n          config\r\n        );\r\n        \r\n        setMessages(res.data.messages);\r\n        \r\n        // Check if there are more messages to load\r\n        if (res.data.pagination.totalPages <= 1) {\r\n          setHasMore(false);\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to load messages');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchMessages();\r\n  }, [conversation]);\r\n  \r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [messages]);\r\n  \r\n  // Load more messages when scrolling to top\r\n  const handleScroll = async () => {\r\n    if (!containerRef.current || !hasMore || loading) return;\r\n    \r\n    const { scrollTop } = containerRef.current;\r\n    \r\n    // If scrolled to top, load more messages\r\n    if (scrollTop === 0) {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        const token = localStorage.getItem('token');\r\n        \r\n        if (!token) {\r\n          setError('Not authenticated');\r\n          return;\r\n        }\r\n        \r\n        const config = {\r\n          headers: {\r\n            'x-auth-token': token\r\n          }\r\n        };\r\n        \r\n        const nextPage = page + 1;\r\n        \r\n        const res = await axios.get(\r\n          `/api/conversations/${conversation._id}/messages?page=${nextPage}&limit=20`,\r\n          config\r\n        );\r\n        \r\n        // Prepend new messages to existing ones\r\n        setMessages([...res.data.messages.reverse(), ...messages]);\r\n        \r\n        // Update page number\r\n        setPage(nextPage);\r\n        \r\n        // Check if there are more messages to load\r\n        if (nextPage >= res.data.pagination.totalPages) {\r\n          setHasMore(false);\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to load more messages');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Format message timestamp\r\n  const formatMessageTime = (timestamp) => {\r\n    if (!timestamp) return '';\r\n    \r\n    const date = new Date(timestamp);\r\n    const now = new Date();\r\n    \r\n    // If today, show time\r\n    if (date.toDateString() === now.toDateString()) {\r\n      return format(date, 'h:mm a');\r\n    }\r\n    \r\n    // If within last week, show day and time\r\n    const oneWeekAgo = new Date();\r\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n    \r\n    if (date > oneWeekAgo) {\r\n      return format(date, 'EEE h:mm a');\r\n    }\r\n    \r\n    // Otherwise show date and time\r\n    return format(date, 'MM/dd/yyyy h:mm a');\r\n  };\r\n  \r\n  // Handle sending a new message\r\n  const handleSendMessage = async (content, type = 'text', file = null) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        setError('Not authenticated');\r\n        return;\r\n      }\r\n      \r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      \r\n      let res;\r\n      \r\n      if (type === 'text') {\r\n        // Send text message\r\n        res = await axios.post(\r\n          `/api/conversations/${conversation._id}/messages`,\r\n          { content },\r\n          config\r\n        );\r\n      } else if (type === 'media' && file) {\r\n        // Send media message\r\n        const formData = new FormData();\r\n        formData.append('media', file);\r\n        formData.append('content', content); // Optional caption\r\n        \r\n        const mediaConfig = {\r\n          headers: {\r\n            'x-auth-token': token,\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        };\r\n        \r\n        res = await axios.post(\r\n          `/api/conversations/${conversation._id}/messages/media`,\r\n          formData,\r\n          mediaConfig\r\n        );\r\n      }\r\n      \r\n      // Add new message to list\r\n      if (res && res.data) {\r\n        setMessages([...messages, res.data]);\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to send message');\r\n      console.error(err);\r\n    }\r\n  };\r\n  \r\n  // Handle message reactions\r\n  const handleReaction = async (messageId, reaction) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        setError('Not authenticated');\r\n        return;\r\n      }\r\n      \r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      \r\n      const res = await axios.post(\r\n        `/api/conversations/${conversation._id}/messages/${messageId}/reaction`,\r\n        { reaction },\r\n        config\r\n      );\r\n      \r\n      // Update message in the list\r\n      if (res && res.data) {\r\n        setMessages(\r\n          messages.map(msg => \r\n            msg._id === messageId ? res.data : msg\r\n          )\r\n        );\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to add reaction');\r\n      console.error(err);\r\n    }\r\n  };\r\n  \r\n  // Get message style based on sender\r\n  const getMessageStyle = (message) => {\r\n    if (message.messageType === 'system') {\r\n      return 'system-message';\r\n    }\r\n    \r\n    return message.sender._id === user._id \r\n      ? 'sent-message' \r\n      : 'received-message';\r\n  };\r\n  \r\n  // Render message content based on type\r\n  const renderMessageContent = (message) => {\r\n    switch (message.messageType) {\r\n      case 'image':\r\n        return (\r\n          <>\r\n            <div className=\"message-image\">\r\n              <img src={message.mediaUrl} alt=\"Shared image\" />\r\n            </div>\r\n            {message.content && <p>{message.content}</p>}\r\n          </>\r\n        );\r\n      case 'file':\r\n        return (\r\n          <div className=\"message-file\">\r\n            <i className=\"fas fa-file\"></i>\r\n            <a \r\n              href={message.mediaUrl} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {message.mediaName}\r\n            </a>\r\n            {message.content && <p>{message.content}</p>}\r\n          </div>\r\n        );\r\n      case 'system':\r\n        return <p className=\"system-text\">{message.content}</p>;\r\n      default:\r\n        return <p>{message.content}</p>;\r\n    }\r\n  };\r\n  \r\n  // Render message reactions\r\n  const renderReactions = (message) => {\r\n    if (!message.reactions || message.reactions.length === 0) {\r\n      return null;\r\n    }\r\n    \r\n    // Group reactions by type\r\n    const reactionGroups = message.reactions.reduce((groups, reaction) => {\r\n      const emoji = reaction.reaction;\r\n      \r\n      if (!groups[emoji]) {\r\n        groups[emoji] = {\r\n          count: 0,\r\n          users: []\r\n        };\r\n      }\r\n      \r\n      groups[emoji].count++;\r\n      groups[emoji].users.push(reaction.user);\r\n      \r\n      return groups;\r\n    }, {});\r\n    \r\n    return (\r\n      <div className=\"message-reactions\">\r\n        {Object.entries(reactionGroups).map(([emoji, data]) => (\r\n          <span \r\n            key={emoji} \r\n            className=\"reaction-badge\"\r\n            title={data.users.map(u => u.name).join(', ')}\r\n          >\r\n            {emoji} {data.count}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  if (!conversation) {\r\n    return (\r\n      <div className=\"message-list empty-state\">\r\n        <div className=\"empty-state-content\">\r\n          <i className=\"fas fa-comments\"></i>\r\n          <h3>Select a conversation</h3>\r\n          <p>Choose a conversation from the list or start a new one</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"message-container\">\r\n      <div className=\"message-header\">\r\n        <h2>{conversation.name}</h2>\r\n        <div className=\"header-actions\">\r\n          <button \r\n            className=\"btn-icon\" \r\n            aria-label=\"Conversation Info\"\r\n          >\r\n            <i className=\"fas fa-info-circle\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div \r\n        className=\"message-list\" \r\n        ref={containerRef}\r\n        onScroll={handleScroll}\r\n      >\r\n        {loading && page === 1 && (\r\n          <div className=\"loading-messages\">Loading messages...</div>\r\n        )}\r\n        \r\n        {hasMore && (\r\n          <div className=\"load-more\">\r\n            {loading && page > 1 ? (\r\n              <span>Loading more messages...</span>\r\n            ) : (\r\n              <span>Scroll to top to load more</span>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        {messages.length === 0 && !loading ? (\r\n          <div className=\"empty-messages\">\r\n            <p>No messages yet. Start the conversation!</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"message-items\">\r\n            {messages.map((message, index) => {\r\n              const showAvatar = \r\n                message.messageType !== 'system' &&\r\n                (index === 0 || \r\n                 messages[index - 1].sender._id !== message.sender._id);\r\n              \r\n              return (\r\n                <div\r\n                  key={message._id}\r\n                  className={`message-item ${getMessageStyle(message)}`}\r\n                >\r\n                  {showAvatar && message.messageType !== 'system' && (\r\n                    <div className=\"message-avatar\">\r\n                      <img \r\n                        src={message.sender.profileImage} \r\n                        alt={message.sender.name} \r\n                      />\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <div className=\"message-bubble\">\r\n                    {showAvatar && message.messageType !== 'system' && (\r\n                      <div className=\"message-sender\">{message.sender.name}</div>\r\n                    )}\r\n                    \r\n                    <div className=\"message-content\">\r\n                      {renderMessageContent(message)}\r\n                    </div>\r\n                    \r\n                    {renderReactions(message)}\r\n                    \r\n                    <div className=\"message-meta\">\r\n                      <span className=\"message-time\">\r\n                        {formatMessageTime(message.createdAt)}\r\n                      </span>\r\n                      \r\n                      {message.isEdited && (\r\n                        <span className=\"message-edited\">Edited</span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"message-actions\">\r\n                    <button \r\n                      className=\"action-button reaction-button\"\r\n                      aria-label=\"Add Reaction\"\r\n                    >\r\n                      <i className=\"far fa-smile\"></i>\r\n                    </button>\r\n                    \r\n                    {message.sender._id === user._id && message.messageType === 'text' && (\r\n                      <button \r\n                        className=\"action-button edit-button\"\r\n                        aria-label=\"Edit Message\"\r\n                      >\r\n                        <i className=\"far fa-edit\"></i>\r\n                      </button>\r\n                    )}\r\n                    \r\n                    {(message.sender._id === user._id || user.role === 'admin') && (\r\n                      <button \r\n                        className=\"action-button delete-button\"\r\n                        aria-label=\"Delete Message\"\r\n                      >\r\n                        <i className=\"far fa-trash-alt\"></i>\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <MessageInput \r\n        onSendMessage={handleSendMessage} \r\n        conversationId={conversation._id}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}