{"ast":null,"code":"// client/src/components/conversations/ConversationList.js\nimport React,{useState,useEffect}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import{format}from'date-fns';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ConversationList=_ref=>{let{setActiveConversation,activeConversation}=_ref;const navigate=useNavigate();const[conversations,setConversations]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[filter,setFilter]=useState('all');// Filter options: all, team, topic, direct\nconst[searchQuery,setSearchQuery]=useState('');const[showNewConversationModal,setShowNewConversationModal]=useState(false);// Load conversations\nuseEffect(()=>{const fetchConversations=async()=>{try{const token=localStorage.getItem('token');if(!token){navigate('/');return;}const config={headers:{'x-auth-token':token}};const res=await axios.get('/api/conversations',config);setConversations(res.data);}catch(err){setError('Failed to load conversations');console.error(err);}finally{setLoading(false);}};fetchConversations();},[navigate]);// Apply filters to conversations\nconst filteredConversations=conversations.filter(conversation=>{// Apply type filter\nif(filter!=='all'&&conversation.conversationType!==filter){return false;}// Apply search filter\nif(searchQuery){const query=searchQuery.toLowerCase();return conversation.name.toLowerCase().includes(query)||conversation.description&&conversation.description.toLowerCase().includes(query)||conversation.participants.some(p=>p.user.name.toLowerCase().includes(query));}return true;});// Handle conversation click\nconst handleConversationClick=conversation=>{setActiveConversation(conversation);};// Handle new conversation button click\nconst handleNewConversation=()=>{setShowNewConversationModal(true);};// Format last message timestamp\nconst formatTimestamp=timestamp=>{if(!timestamp)return'';const date=new Date(timestamp);const now=new Date();// If today, show time\nif(date.toDateString()===now.toDateString()){return format(date,'h:mm a');}// If within last week, show day name\nconst oneWeekAgo=new Date();oneWeekAgo.setDate(oneWeekAgo.getDate()-7);if(date>oneWeekAgo){return format(date,'EEE');}// Otherwise show date\nreturn format(date,'MM/dd/yyyy');};// Get last message text preview\nconst getMessagePreview=conversation=>{if(!conversation.lastMessage)return'No messages yet';const{messageType,content,sender}=conversation.lastMessage;if(messageType==='system'){return content;}if(messageType==='image'){return`${sender.name}: [Image] ${content||''}`;}if(messageType==='file'){return`${sender.name}: [File] ${content||''}`;}return`${sender.name}: ${content}`;};// Get conversation icon based on type\nconst getConversationIcon=conversation=>{switch(conversation.conversationType){case'team':return/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-users\"});case'topic':return/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-hashtag\"});case'direct':return/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user\"});default:return/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-comment\"});}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading conversations...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"conversation-list\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"list-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Messages\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-circle\",onClick:handleNewConversation,\"aria-label\":\"New Conversation\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-bar\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search conversations...\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value)}),/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-search\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`filter-tab ${filter==='all'?'active':''}`,onClick:()=>setFilter('all'),children:\"All\"}),/*#__PURE__*/_jsx(\"button\",{className:`filter-tab ${filter==='team'?'active':''}`,onClick:()=>setFilter('team'),children:\"Teams\"}),/*#__PURE__*/_jsx(\"button\",{className:`filter-tab ${filter==='topic'?'active':''}`,onClick:()=>setFilter('topic'),children:\"Topics\"}),/*#__PURE__*/_jsx(\"button\",{className:`filter-tab ${filter==='direct'?'active':''}`,onClick:()=>setFilter('direct'),children:\"Direct\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),filteredConversations.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-list\",children:searchQuery||filter!=='all'?'No conversations match your filters':'No conversations yet'}):/*#__PURE__*/_jsx(\"ul\",{className:\"conversation-items\",children:filteredConversations.map(conversation=>/*#__PURE__*/_jsxs(\"li\",{className:`conversation-item ${(activeConversation===null||activeConversation===void 0?void 0:activeConversation._id)===conversation._id?'active':''}`,onClick:()=>handleConversationClick(conversation),children:[/*#__PURE__*/_jsx(\"div\",{className:\"conversation-icon\",children:getConversationIcon(conversation)}),/*#__PURE__*/_jsxs(\"div\",{className:\"conversation-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"conversation-header\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"conversation-name\",children:conversation.name}),/*#__PURE__*/_jsx(\"span\",{className:\"conversation-time\",children:formatTimestamp(conversation.lastMessageAt)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"conversation-preview\",children:getMessagePreview(conversation)})]})]},conversation._id))}),showNewConversationModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowNewConversationModal(false),children:\"Close\"})})]});};export default ConversationList;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","format","jsx","_jsx","jsxs","_jsxs","ConversationList","_ref","setActiveConversation","activeConversation","navigate","conversations","setConversations","loading","setLoading","error","setError","filter","setFilter","searchQuery","setSearchQuery","showNewConversationModal","setShowNewConversationModal","fetchConversations","token","localStorage","getItem","config","headers","res","get","data","err","console","filteredConversations","conversation","conversationType","query","toLowerCase","name","includes","description","participants","some","p","user","handleConversationClick","handleNewConversation","formatTimestamp","timestamp","date","Date","now","toDateString","oneWeekAgo","setDate","getDate","getMessagePreview","lastMessage","messageType","content","sender","getConversationIcon","className","children","onClick","type","placeholder","value","onChange","e","target","length","map","_id","lastMessageAt"],"sources":["C:/Users/user/academy-portal-test/client/src/components/conversations/ConversationList.js"],"sourcesContent":["// client/src/components/conversations/ConversationList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\n\r\nconst ConversationList = ({ setActiveConversation, activeConversation }) => {\r\n  const navigate = useNavigate();\r\n  const [conversations, setConversations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [filter, setFilter] = useState('all'); // Filter options: all, team, topic, direct\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [showNewConversationModal, setShowNewConversationModal] = useState(false);\r\n  \r\n  // Load conversations\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        \r\n        if (!token) {\r\n          navigate('/');\r\n          return;\r\n        }\r\n        \r\n        const config = {\r\n          headers: {\r\n            'x-auth-token': token\r\n          }\r\n        };\r\n        \r\n        const res = await axios.get('/api/conversations', config);\r\n        setConversations(res.data);\r\n      } catch (err) {\r\n        setError('Failed to load conversations');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchConversations();\r\n  }, [navigate]);\r\n  \r\n  // Apply filters to conversations\r\n  const filteredConversations = conversations.filter(conversation => {\r\n    // Apply type filter\r\n    if (filter !== 'all' && conversation.conversationType !== filter) {\r\n      return false;\r\n    }\r\n    \r\n    // Apply search filter\r\n    if (searchQuery) {\r\n      const query = searchQuery.toLowerCase();\r\n      \r\n      return (\r\n        conversation.name.toLowerCase().includes(query) ||\r\n        (conversation.description && \r\n         conversation.description.toLowerCase().includes(query)) ||\r\n        conversation.participants.some(\r\n          p => p.user.name.toLowerCase().includes(query)\r\n        )\r\n      );\r\n    }\r\n    \r\n    return true;\r\n  });\r\n  \r\n  // Handle conversation click\r\n  const handleConversationClick = (conversation) => {\r\n    setActiveConversation(conversation);\r\n  };\r\n  \r\n  // Handle new conversation button click\r\n  const handleNewConversation = () => {\r\n    setShowNewConversationModal(true);\r\n  };\r\n  \r\n  // Format last message timestamp\r\n  const formatTimestamp = (timestamp) => {\r\n    if (!timestamp) return '';\r\n    \r\n    const date = new Date(timestamp);\r\n    const now = new Date();\r\n    \r\n    // If today, show time\r\n    if (date.toDateString() === now.toDateString()) {\r\n      return format(date, 'h:mm a');\r\n    }\r\n    \r\n    // If within last week, show day name\r\n    const oneWeekAgo = new Date();\r\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n    \r\n    if (date > oneWeekAgo) {\r\n      return format(date, 'EEE');\r\n    }\r\n    \r\n    // Otherwise show date\r\n    return format(date, 'MM/dd/yyyy');\r\n  };\r\n  \r\n  // Get last message text preview\r\n  const getMessagePreview = (conversation) => {\r\n    if (!conversation.lastMessage) return 'No messages yet';\r\n    \r\n    const { messageType, content, sender } = conversation.lastMessage;\r\n    \r\n    if (messageType === 'system') {\r\n      return content;\r\n    }\r\n    \r\n    if (messageType === 'image') {\r\n      return `${sender.name}: [Image] ${content || ''}`;\r\n    }\r\n    \r\n    if (messageType === 'file') {\r\n      return `${sender.name}: [File] ${content || ''}`;\r\n    }\r\n    \r\n    return `${sender.name}: ${content}`;\r\n  };\r\n  \r\n  // Get conversation icon based on type\r\n  const getConversationIcon = (conversation) => {\r\n    switch (conversation.conversationType) {\r\n      case 'team':\r\n        return <i className=\"fas fa-users\"></i>;\r\n      case 'topic':\r\n        return <i className=\"fas fa-hashtag\"></i>;\r\n      case 'direct':\r\n        return <i className=\"fas fa-user\"></i>;\r\n      default:\r\n        return <i className=\"fas fa-comment\"></i>;\r\n    }\r\n  };\r\n  \r\n  if (loading) {\r\n    return <div className=\"loading\">Loading conversations...</div>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"conversation-list\">\r\n      <div className=\"list-header\">\r\n        <h2>Messages</h2>\r\n        <button \r\n          className=\"btn btn-circle\" \r\n          onClick={handleNewConversation}\r\n          aria-label=\"New Conversation\"\r\n        >\r\n          <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search conversations...\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n        />\r\n        <i className=\"fas fa-search\"></i>\r\n      </div>\r\n      \r\n      <div className=\"filter-tabs\">\r\n        <button \r\n          className={`filter-tab ${filter === 'all' ? 'active' : ''}`}\r\n          onClick={() => setFilter('all')}\r\n        >\r\n          All\r\n        </button>\r\n        <button \r\n          className={`filter-tab ${filter === 'team' ? 'active' : ''}`}\r\n          onClick={() => setFilter('team')}\r\n        >\r\n          Teams\r\n        </button>\r\n        <button \r\n          className={`filter-tab ${filter === 'topic' ? 'active' : ''}`}\r\n          onClick={() => setFilter('topic')}\r\n        >\r\n          Topics\r\n        </button>\r\n        <button \r\n          className={`filter-tab ${filter === 'direct' ? 'active' : ''}`}\r\n          onClick={() => setFilter('direct')}\r\n        >\r\n          Direct\r\n        </button>\r\n      </div>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      {filteredConversations.length === 0 ? (\r\n        <div className=\"empty-list\">\r\n          {searchQuery || filter !== 'all' \r\n            ? 'No conversations match your filters'\r\n            : 'No conversations yet'}\r\n        </div>\r\n      ) : (\r\n        <ul className=\"conversation-items\">\r\n          {filteredConversations.map(conversation => (\r\n            <li\r\n              key={conversation._id}\r\n              className={`conversation-item ${\r\n                activeConversation?._id === conversation._id ? 'active' : ''\r\n              }`}\r\n              onClick={() => handleConversationClick(conversation)}\r\n            >\r\n              <div className=\"conversation-icon\">\r\n                {getConversationIcon(conversation)}\r\n              </div>\r\n              <div className=\"conversation-content\">\r\n                <div className=\"conversation-header\">\r\n                  <h3 className=\"conversation-name\">{conversation.name}</h3>\r\n                  <span className=\"conversation-time\">\r\n                    {formatTimestamp(conversation.lastMessageAt)}\r\n                  </span>\r\n                </div>\r\n                <div className=\"conversation-preview\">\r\n                  {getMessagePreview(conversation)}\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      \r\n      {/* New Conversation Modal would go here */}\r\n      {showNewConversationModal && (\r\n        <div className=\"modal\">\r\n          {/* Modal content would go here */}\r\n          <button onClick={() => setShowNewConversationModal(false)}>Close</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConversationList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}