{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\academy-portal-test\\\\client\\\\src\\\\components\\\\conversations\\\\ConversationList.js\",\n  _s = $RefreshSig$();\n// client/src/components/conversations/ConversationList.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationList = ({\n  setActiveConversation,\n  activeConversation\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [filter, setFilter] = useState('all'); // Filter options: all, team, topic, direct\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showNewConversationModal, setShowNewConversationModal] = useState(false);\n\n  // Load conversations\n  useEffect(() => {\n    const fetchConversations = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          navigate('/');\n          return;\n        }\n        const config = {\n          headers: {\n            'x-auth-token': token\n          }\n        };\n        const res = await axios.get('/api/conversations', config);\n        setConversations(res.data);\n      } catch (err) {\n        setError('Failed to load conversations');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchConversations();\n  }, [navigate]);\n\n  // Apply filters to conversations\n  const filteredConversations = conversations.filter(conversation => {\n    // Apply type filter\n    if (filter !== 'all' && conversation.conversationType !== filter) {\n      return false;\n    }\n\n    // Apply search filter\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase();\n      return conversation.name.toLowerCase().includes(query) || conversation.description && conversation.description.toLowerCase().includes(query) || conversation.participants.some(p => p.user.name.toLowerCase().includes(query));\n    }\n    return true;\n  });\n\n  // Handle conversation click\n  const handleConversationClick = conversation => {\n    setActiveConversation(conversation);\n  };\n\n  // Handle new conversation button click\n  const handleNewConversation = () => {\n    setShowNewConversationModal(true);\n  };\n\n  // Format last message timestamp\n  const formatTimestamp = timestamp => {\n    if (!timestamp) return '';\n    const date = new Date(timestamp);\n    const now = new Date();\n\n    // If today, show time\n    if (date.toDateString() === now.toDateString()) {\n      return format(date, 'h:mm a');\n    }\n\n    // If within last week, show day name\n    const oneWeekAgo = new Date();\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n    if (date > oneWeekAgo) {\n      return format(date, 'EEE');\n    }\n\n    // Otherwise show date\n    return format(date, 'MM/dd/yyyy');\n  };\n\n  // Get last message text preview\n  const getMessagePreview = conversation => {\n    if (!conversation.lastMessage) return 'No messages yet';\n    const {\n      messageType,\n      content,\n      sender\n    } = conversation.lastMessage;\n    if (messageType === 'system') {\n      return content;\n    }\n    if (messageType === 'image') {\n      return `${sender.name}: [Image] ${content || ''}`;\n    }\n    if (messageType === 'file') {\n      return `${sender.name}: [File] ${content || ''}`;\n    }\n    return `${sender.name}: ${content}`;\n  };\n\n  // Get conversation icon based on type\n  const getConversationIcon = conversation => {\n    switch (conversation.conversationType) {\n      case 'team':\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 16\n        }, this);\n      case 'topic':\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-hashtag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 16\n        }, this);\n      case 'direct':\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading conversations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-circle\",\n        onClick: handleNewConversation,\n        \"aria-label\": \"New Conversation\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search conversations...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-tab ${filter === 'all' ? 'active' : ''}`,\n        onClick: () => setFilter('all'),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-tab ${filter === 'team' ? 'active' : ''}`,\n        onClick: () => setFilter('team'),\n        children: \"Teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-tab ${filter === 'topic' ? 'active' : ''}`,\n        onClick: () => setFilter('topic'),\n        children: \"Topics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-tab ${filter === 'direct' ? 'active' : ''}`,\n        onClick: () => setFilter('direct'),\n        children: \"Direct\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }, this), filteredConversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-list\",\n      children: searchQuery || filter !== 'all' ? 'No conversations match your filters' : 'No conversations yet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"conversation-items\",\n      children: filteredConversations.map(conversation => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `conversation-item ${(activeConversation === null || activeConversation === void 0 ? void 0 : activeConversation._id) === conversation._id ? 'active' : ''}`,\n        onClick: () => handleConversationClick(conversation),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-icon\",\n          children: getConversationIcon(conversation)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"conversation-name\",\n              children: conversation.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"conversation-time\",\n              children: formatTimestamp(conversation.lastMessageAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-preview\",\n            children: getMessagePreview(conversation)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this)]\n      }, conversation._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), showNewConversationModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowNewConversationModal(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversationList, \"kOvMEUkqDEwIsag0gAfKb4uTENM=\", false, function () {\n  return [useNavigate];\n});\n_c = ConversationList;\nexport default ConversationList;\nvar _c;\n$RefreshReg$(_c, \"ConversationList\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","format","jsxDEV","_jsxDEV","ConversationList","setActiveConversation","activeConversation","_s","navigate","conversations","setConversations","loading","setLoading","error","setError","filter","setFilter","searchQuery","setSearchQuery","showNewConversationModal","setShowNewConversationModal","fetchConversations","token","localStorage","getItem","config","headers","res","get","data","err","console","filteredConversations","conversation","conversationType","query","toLowerCase","name","includes","description","participants","some","p","user","handleConversationClick","handleNewConversation","formatTimestamp","timestamp","date","Date","now","toDateString","oneWeekAgo","setDate","getDate","getMessagePreview","lastMessage","messageType","content","sender","getConversationIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","type","placeholder","value","onChange","e","target","length","map","_id","lastMessageAt","_c","$RefreshReg$"],"sources":["C:/Users/user/academy-portal-test/client/src/components/conversations/ConversationList.js"],"sourcesContent":["// client/src/components/conversations/ConversationList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\n\r\nconst ConversationList = ({ setActiveConversation, activeConversation }) => {\r\n  const navigate = useNavigate();\r\n  const [conversations, setConversations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [filter, setFilter] = useState('all'); // Filter options: all, team, topic, direct\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [showNewConversationModal, setShowNewConversationModal] = useState(false);\r\n  \r\n  // Load conversations\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        \r\n        if (!token) {\r\n          navigate('/');\r\n          return;\r\n        }\r\n        \r\n        const config = {\r\n          headers: {\r\n            'x-auth-token': token\r\n          }\r\n        };\r\n        \r\n        const res = await axios.get('/api/conversations', config);\r\n        setConversations(res.data);\r\n      } catch (err) {\r\n        setError('Failed to load conversations');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchConversations();\r\n  }, [navigate]);\r\n  \r\n  // Apply filters to conversations\r\n  const filteredConversations = conversations.filter(conversation => {\r\n    // Apply type filter\r\n    if (filter !== 'all' && conversation.conversationType !== filter) {\r\n      return false;\r\n    }\r\n    \r\n    // Apply search filter\r\n    if (searchQuery) {\r\n      const query = searchQuery.toLowerCase();\r\n      \r\n      return (\r\n        conversation.name.toLowerCase().includes(query) ||\r\n        (conversation.description && \r\n         conversation.description.toLowerCase().includes(query)) ||\r\n        conversation.participants.some(\r\n          p => p.user.name.toLowerCase().includes(query)\r\n        )\r\n      );\r\n    }\r\n    \r\n    return true;\r\n  });\r\n  \r\n  // Handle conversation click\r\n  const handleConversationClick = (conversation) => {\r\n    setActiveConversation(conversation);\r\n  };\r\n  \r\n  // Handle new conversation button click\r\n  const handleNewConversation = () => {\r\n    setShowNewConversationModal(true);\r\n  };\r\n  \r\n  // Format last message timestamp\r\n  const formatTimestamp = (timestamp) => {\r\n    if (!timestamp) return '';\r\n    \r\n    const date = new Date(timestamp);\r\n    const now = new Date();\r\n    \r\n    // If today, show time\r\n    if (date.toDateString() === now.toDateString()) {\r\n      return format(date, 'h:mm a');\r\n    }\r\n    \r\n    // If within last week, show day name\r\n    const oneWeekAgo = new Date();\r\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n    \r\n    if (date > oneWeekAgo) {\r\n      return format(date, 'EEE');\r\n    }\r\n    \r\n    // Otherwise show date\r\n    return format(date, 'MM/dd/yyyy');\r\n  };\r\n  \r\n  // Get last message text preview\r\n  const getMessagePreview = (conversation) => {\r\n    if (!conversation.lastMessage) return 'No messages yet';\r\n    \r\n    const { messageType, content, sender } = conversation.lastMessage;\r\n    \r\n    if (messageType === 'system') {\r\n      return content;\r\n    }\r\n    \r\n    if (messageType === 'image') {\r\n      return `${sender.name}: [Image] ${content || ''}`;\r\n    }\r\n    \r\n    if (messageType === 'file') {\r\n      return `${sender.name}: [File] ${content || ''}`;\r\n    }\r\n    \r\n    return `${sender.name}: ${content}`;\r\n  };\r\n  \r\n  // Get conversation icon based on type\r\n  const getConversationIcon = (conversation) => {\r\n    switch (conversation.conversationType) {\r\n      case 'team':\r\n        return <i className=\"fas fa-users\"></i>;\r\n      case 'topic':\r\n        return <i className=\"fas fa-hashtag\"></i>;\r\n      case 'direct':\r\n        return <i className=\"fas fa-user\"></i>;\r\n      default:\r\n        return <i className=\"fas fa-comment\"></i>;\r\n    }\r\n  };\r\n  \r\n  if (loading) {\r\n    return <div className=\"loading\">Loading conversations...</div>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"conversation-list\">\r\n      <div className=\"list-header\">\r\n        <h2>Messages</h2>\r\n        <button \r\n          className=\"btn btn-circle\" \r\n          onClick={handleNewConversation}\r\n          aria-label=\"New Conversation\"\r\n        >\r\n          <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search conversations...\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n        />\r\n        <i className=\"fas fa-search\"></i>\r\n      </div>\r\n      \r\n      <div className=\"filter-tabs\">\r\n        <button \r\n          className={`filter-tab ${filter === 'all' ? 'active' : ''}`}\r\n          onClick={() => setFilter('all')}\r\n        >\r\n          All\r\n        </button>\r\n        <button \r\n          className={`filter-tab ${filter === 'team' ? 'active' : ''}`}\r\n          onClick={() => setFilter('team')}\r\n        >\r\n          Teams\r\n        </button>\r\n        <button \r\n          className={`filter-tab ${filter === 'topic' ? 'active' : ''}`}\r\n          onClick={() => setFilter('topic')}\r\n        >\r\n          Topics\r\n        </button>\r\n        <button \r\n          className={`filter-tab ${filter === 'direct' ? 'active' : ''}`}\r\n          onClick={() => setFilter('direct')}\r\n        >\r\n          Direct\r\n        </button>\r\n      </div>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      {filteredConversations.length === 0 ? (\r\n        <div className=\"empty-list\">\r\n          {searchQuery || filter !== 'all' \r\n            ? 'No conversations match your filters'\r\n            : 'No conversations yet'}\r\n        </div>\r\n      ) : (\r\n        <ul className=\"conversation-items\">\r\n          {filteredConversations.map(conversation => (\r\n            <li\r\n              key={conversation._id}\r\n              className={`conversation-item ${\r\n                activeConversation?._id === conversation._id ? 'active' : ''\r\n              }`}\r\n              onClick={() => handleConversationClick(conversation)}\r\n            >\r\n              <div className=\"conversation-icon\">\r\n                {getConversationIcon(conversation)}\r\n              </div>\r\n              <div className=\"conversation-content\">\r\n                <div className=\"conversation-header\">\r\n                  <h3 className=\"conversation-name\">{conversation.name}</h3>\r\n                  <span className=\"conversation-time\">\r\n                    {formatTimestamp(conversation.lastMessageAt)}\r\n                  </span>\r\n                </div>\r\n                <div className=\"conversation-preview\">\r\n                  {getMessagePreview(conversation)}\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      \r\n      {/* New Conversation Modal would go here */}\r\n      {showNewConversationModal && (\r\n        <div className=\"modal\">\r\n          {/* Modal content would go here */}\r\n          <button onClick={() => setShowNewConversationModal(false)}>Close</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConversationList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}