{"ast":null,"code":"// client/src/components/dashboard/Dashboard.js\nimport React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import Sidebar from'./Sidebar';import ConversationList from'../conversations/ConversationList';import MessageList from'../messages/MessageList';import io from'socket.io-client';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=_ref=>{let{auth,setAuth}=_ref;const navigate=useNavigate();const[activeConversation,setActiveConversation]=useState(null);const[socket,setSocket]=useState(null);// Initialize socket connection\nuseEffect(()=>{if(!auth.isAuthenticated)return;// Connect to socket\nconst newSocket=io();setSocket(newSocket);// Authenticate socket connection\nnewSocket.emit('authenticate',localStorage.getItem('token'));// Cleanup on unmount\nreturn()=>{if(newSocket){newSocket.disconnect();}};},[auth.isAuthenticated]);// Join conversation room when active conversation changes\nuseEffect(()=>{if(!socket||!activeConversation)return;// Join conversation room\nsocket.emit('join_conversation',activeConversation._id);// Leave conversation room when component unmounts or active conversation changes\nreturn()=>{if(socket&&activeConversation){socket.emit('leave_conversation',activeConversation._id);}};},[socket,activeConversation]);// Redirect to login if not authenticated\nuseEffect(()=>{if(!auth.isAuthenticated&&!auth.loading){navigate('/');}},[auth,navigate]);// Handle logout\nconst handleLogout=()=>{// Remove token from localStorage\nlocalStorage.removeItem('token');// Reset auth state\nsetAuth({isAuthenticated:false,user:null,loading:false});// Disconnect socket\nif(socket){socket.disconnect();}// Redirect to login\nnavigate('/');};if(auth.loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(Sidebar,{user:auth.user,onLogout:handleLogout}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"conversation-panel\",children:/*#__PURE__*/_jsx(ConversationList,{setActiveConversation:setActiveConversation,activeConversation:activeConversation})}),/*#__PURE__*/_jsx(\"div\",{className:\"message-panel\",children:/*#__PURE__*/_jsx(MessageList,{conversation:activeConversation,user:auth.user})})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Sidebar","ConversationList","MessageList","io","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","auth","setAuth","navigate","activeConversation","setActiveConversation","socket","setSocket","isAuthenticated","newSocket","emit","localStorage","getItem","disconnect","_id","loading","handleLogout","removeItem","user","className","children","onLogout","conversation"],"sources":["C:/Users/user/academy-portal-test/client/src/components/dashboard/Dashboard.js"],"sourcesContent":["// client/src/components/dashboard/Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Sidebar from './Sidebar';\r\nimport ConversationList from '../conversations/ConversationList';\r\nimport MessageList from '../messages/MessageList';\r\nimport io from 'socket.io-client';\r\n\r\nconst Dashboard = ({ auth, setAuth }) => {\r\n  const navigate = useNavigate();\r\n  const [activeConversation, setActiveConversation] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n  \r\n  // Initialize socket connection\r\n  useEffect(() => {\r\n    if (!auth.isAuthenticated) return;\r\n    \r\n    // Connect to socket\r\n    const newSocket = io();\r\n    setSocket(newSocket);\r\n    \r\n    // Authenticate socket connection\r\n    newSocket.emit('authenticate', localStorage.getItem('token'));\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      if (newSocket) {\r\n        newSocket.disconnect();\r\n      }\r\n    };\r\n  }, [auth.isAuthenticated]);\r\n  \r\n  // Join conversation room when active conversation changes\r\n  useEffect(() => {\r\n    if (!socket || !activeConversation) return;\r\n    \r\n    // Join conversation room\r\n    socket.emit('join_conversation', activeConversation._id);\r\n    \r\n    // Leave conversation room when component unmounts or active conversation changes\r\n    return () => {\r\n      if (socket && activeConversation) {\r\n        socket.emit('leave_conversation', activeConversation._id);\r\n      }\r\n    };\r\n  }, [socket, activeConversation]);\r\n  \r\n  // Redirect to login if not authenticated\r\n  useEffect(() => {\r\n    if (!auth.isAuthenticated && !auth.loading) {\r\n      navigate('/');\r\n    }\r\n  }, [auth, navigate]);\r\n  \r\n  // Handle logout\r\n  const handleLogout = () => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem('token');\r\n    \r\n    // Reset auth state\r\n    setAuth({\r\n      isAuthenticated: false,\r\n      user: null,\r\n      loading: false\r\n    });\r\n    \r\n    // Disconnect socket\r\n    if (socket) {\r\n      socket.disconnect();\r\n    }\r\n    \r\n    // Redirect to login\r\n    navigate('/');\r\n  };\r\n  \r\n  if (auth.loading) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Sidebar user={auth.user} onLogout={handleLogout} />\r\n      \r\n      <div className=\"main-content\">\r\n        <div className=\"conversation-panel\">\r\n          <ConversationList\r\n            setActiveConversation={setActiveConversation}\r\n            activeConversation={activeConversation}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"message-panel\">\r\n          <MessageList\r\n            conversation={activeConversation}\r\n            user={auth.user}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}